
- first not reachable number c = a.x + b.y with x>=0 and y>=0 --> (a*b)-a-b


ll egcd( ll a , ll b , ll &x , ll &y) {

    if( !b ) {
        x = 1;
        y = 0;
        return a;
    }

    ll x1 , y1;
    ll g = egcd(b , a%b , x1 , y1);

    x = y1;
    y = x1 - y1*(a/b);

    return g;
}

bool find_sol( ll a , ll b , ll c , ll &x , ll &y , ll &g )  {

    g = egcd( abs(a) , abs(b) , x , y );
//    cout<<g<<"\n";
//    return 0;
    if( c % g ) return false;

    x *= c/g;
    y *= c/g;

    if( a < 0 ) x = -x;
    if( b < 0 ) y = -y;

    return true;
}

void shift_solution(ll & x, ll & y, ll a, ll b, ll cnt) {
    x += cnt * b;
    y -= cnt * a;
}

ll find_all_solutions(ll a, ll b, ll c, ll minx, ll maxx, ll miny, ll maxy) {
    ll x, y, g;

    if( !a && !b ) {
        return (c==0 ? (maxx-minx+1)*(maxy-miny+1) : 0);
    }

    if (!find_sol(a, b, c, x, y, g))
        return 0;
//    cout<<x<<" "<<y<<" "<<g<<" "<<a<<" "<<b<<"\n";
//    return 0;
    a /= g;
    b /= g;
    if( !a || !b ) {

        if( a && x>=minx&&x<=maxx ) {
            return (maxy-miny+1);
        }
        if( b && y>=miny&&y<=maxy ) {
            return (maxx-minx+1);
        }

        return 0;

    }
    ll sign_a = a > 0 ? +1 : -1;
    ll sign_b = b > 0 ? +1 : -1;

    shift_solution(x, y, a, b, (minx - x) / b);
    if (x < minx)
        shift_solution(x, y, a, b, sign_b);
    if (x > maxx)
        return 0;
    ll lx1 = x;

    shift_solution(x, y, a, b, (maxx - x) / b);
    if (x > maxx)
        shift_solution(x, y, a, b, -sign_b);
    ll rx1 = x;

    shift_solution(x, y, a, b, -(miny - y) / a);
    if (y < miny)
        shift_solution(x, y, a, b, -sign_a);
    if (y > maxy)
        return 0;
    ll lx2 = x;

    shift_solution(x, y, a, b, -(maxy - y) / a);
    if (y > maxy)
        shift_solution(x, y, a, b, sign_a);
    ll rx2 = x;

    if (lx2 > rx2)
        swap(lx2, rx2);
    ll lx = max(lx1, lx2);
    ll rx = min(rx1, rx2);
//    cout<<"wa\n";
//    cout<<lx<<" "<<rx<<"\n";
    if (lx > rx)
        return 0;
//    cout<<"wa\n";
    return (rx - lx) / abs(b) + 1;
}
